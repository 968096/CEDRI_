syntax = "proto3";

package cedri;

// Permanece igual, caso ainda use BME68x
enum HeaterProfile {
  HP_354 = 0;
  HP_301 = 1;
  HP_321 = 2;
  HP_322 = 3;
  HP_323 = 4;
  HP_324 = 5;
  HP_331 = 6;
  HP_332 = 7;
}

// Leitura dos sensores BME68x, como antes
message SensorReadingLite {
  uint32 device_id = 1;         // esperado usar até uint16_t no código (0..65535)
  uint32 location_id = 2;       // idem
  uint32 sensor_id = 3;         // esperado usar até uint8_t no código (0..7)
  HeaterProfile heater_profile = 4;
  uint32 measurement_step = 5;  // esperado usar até uint8_t no código (0..9)
  float temp_c = 6;
  float humidity_pct = 7;
  float pressure_hpa = 8;
  uint32 gas_resistance_ohm = 9;
  bool gas_valid = 10;
  bool heat_stable = 11;
  uint32 timestamp = 12;        // esperado usar até uint32_t (Unix time)
}

// NOVA mensagem para leitura de GPS, enxuta para LoRaWAN
message GpsReading {
  uint32 device_id = 1;         // esperado usar até uint16_t no código (0..65535)
  float latitude = 2;           // precisão simples (float, 4 bytes)
  float longitude = 3;          // precisão simples (float, 4 bytes)
  uint32 timestamp = 4;         // opcional, pode ser millis() ou unix
  uint32 satellites = 5;        // opcional, pode usar até uint8_t no código
}