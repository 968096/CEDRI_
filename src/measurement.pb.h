/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_MEASUREMENT_PB_H_INCLUDED
#define PB_MEASUREMENT_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Measurement {
    pb_callback_t device_id;
    pb_callback_t location;
    float volume_l;
    uint32_t sensor_id;
    pb_callback_t heater_profile;
    uint32_t measurement_step;
    float temp_c;
    float humidity_pct;
    float pressure_hpa;
    uint32_t gas_resistance_ohm;
    bool gas_valid;
    bool heat_stable;
    uint32_t timestamp;
} Measurement;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Measurement_init_default                 {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0}
#define Measurement_init_zero                    {{{NULL}, NULL}, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Measurement_device_id_tag                1
#define Measurement_location_tag                 2
#define Measurement_volume_l_tag                 3
#define Measurement_sensor_id_tag                4
#define Measurement_heater_profile_tag           5
#define Measurement_measurement_step_tag         6
#define Measurement_temp_c_tag                   7
#define Measurement_humidity_pct_tag             8
#define Measurement_pressure_hpa_tag             9
#define Measurement_gas_resistance_ohm_tag       10
#define Measurement_gas_valid_tag                11
#define Measurement_heat_stable_tag              12
#define Measurement_timestamp_tag                13

/* Struct field encoding specification for nanopb */
#define Measurement_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   device_id,         1) \
X(a, CALLBACK, SINGULAR, STRING,   location,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    volume_l,          3) \
X(a, STATIC,   SINGULAR, UINT32,   sensor_id,         4) \
X(a, CALLBACK, SINGULAR, STRING,   heater_profile,    5) \
X(a, STATIC,   SINGULAR, UINT32,   measurement_step,   6) \
X(a, STATIC,   SINGULAR, FLOAT,    temp_c,            7) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity_pct,      8) \
X(a, STATIC,   SINGULAR, FLOAT,    pressure_hpa,      9) \
X(a, STATIC,   SINGULAR, UINT32,   gas_resistance_ohm,  10) \
X(a, STATIC,   SINGULAR, BOOL,     gas_valid,        11) \
X(a, STATIC,   SINGULAR, BOOL,     heat_stable,      12) \
X(a, STATIC,   SINGULAR, UINT32,   timestamp,        13)
#define Measurement_CALLBACK pb_default_field_callback
#define Measurement_DEFAULT NULL

extern const pb_msgdesc_t Measurement_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Measurement_fields &Measurement_msg

/* Maximum encoded size of messages (where known) */
/* Measurement_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
